-- @SCHEMA

--
DROP TABLE IF EXISTS public.locations;
CREATE TABLE IF NOT EXISTS public.locations (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  location_name TEXT NOT NULL
);

-- 
DROP TABLE IF EXISTS public.invoice_types;
CREATE TABLE IF NOT EXISTS public.invoice_types (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  invoice_name TEXT NOT NULL,
  code TEXT NOT NULL
);

-- 
DROP TABLE IF EXISTS public.price_levels;
CREATE TABLE IF NOT EXISTS public.price_levels (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  level_name TEXT NOT NULL,
  code TEXT NOT NULL UNIQUE,
  price NUMERIC NOT NULL DEFAULT 0
);

-- Creates the enumeration types for public.contacts
CREATE TYPE contacttype AS ENUM ('staff', 'customer', 'dealer');
CREATE TYPE infotype AS ENUM('personal', 'corporate');
CREATE TYPE gendertype AS ENUM('male', 'female');

--
DROP TABLE IF EXISTS public.contacts;
CREATE TABLE IF NOT EXISTS public.contacts (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 10000 INCREMENT BY 1) PRIMARY KEY,
  contact_type contacttype NOT NULL DEFAULT 'customer',
  location_id INT NULL REFERENCES public.locations(id) ON DELETE SET NULL,
  profile_url TEXT NOT NULL DEFAULT '',
  first_name TEXT NOT NULL,
  last_name TEXT NOT NULL,
  info_type infotype NOT NULL DEFAULT 'personal',
  middle_initial CHAR(2) NULL,
  price_level INT NOT NULL DEFAULT 0,
  address_line TEXT NOT NULL,
  birthdate TIMESTAMP NULL,
  birthplace TEXT NULL,
  sex gendertype NOT NULL DEFAULT 'male',
  citizenship TEXT NULL DEFAULT 'Filipino',
  civil_status TEXT NULL,
  occupation TEXT NULL,
  tin_no TEXT NULL,
  company_name TEXT NULL, 
  company_address TEXT NULL,
  business_nature TEXT NULL,
  date_added TIMESTAMP NOT NULL DEFAULT now(),
  date_open TIMESTAMP NOT NULL,
  approved_by INT NULL REFERENCES public.contacts(id) ON DELETE SET NULL,
  remarks TEXT NULL DEFAULT ''
);

--
DROP TABLE IF EXISTS public.item_types;
CREATE TABLE IF NOT EXISTS public.item_types (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  class TEXT NOT NULL UNIQUE
);

-- 
DROP TABLE IF EXISTS public.items;
CREATE TABLE IF NOT EXISTS public.items (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 20000 INCREMENT BY 1) PRIMARY KEY,
  staff_id INT NULL REFERENCES public.contacts(id) ON DELETE SET NULL,
  dealer_id INT NOT NULL REFERENCES public.contacts(id) ON DELETE CASCADE,
  item_type_id INT NULL REFERENCES public.item_types(id) ON DELETE SET NULL,
  item_image_url TEXT NOT NULL DEFAULT '',
  item_name TEXT NOT NULL UNIQUE,
  item_cost NUMERIC NOT NULL,
  item_unit_type CHAR(4) NOT NULL DEFAULT 'pcs',
  item_sold NUMERIC NOT NULL DEFAULT 0,
  item_quantity NUMERIC NOT NULL DEFAULT 0,
  vat_amount NUMERIC NOT NULL DEFAULT 0,
  discount NUMERIC NOT NULL DEFAULT 0,
  code TEXT NOT NULL UNIQUE,
  barcode TEXT NULL,
  unit CHAR(3) NOT NULL
);

--
DROP TABLE IF EXISTS public.items_price_levels;
CREATE TABLE IF NOT EXISTS public.items_price_levels (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  item_id INT NOT NULL REFERENCES public.items(id) ON DELETE CASCADE,
  price_level_id INT NOT NULL REFERENCES public.price_levels(id) ON DELETE CASCADE
);

CREATE TYPE salesstatus AS ENUM('in-progress', 'paid', 'refunded', 'return');

-- 
DROP TABLE IF EXISTS public.sales;
CREATE TABLE IF NOT EXISTS public.sales (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 30000 INCREMENT BY 1) PRIMARY KEY,
  user_id UUID NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  staff_id INT NULL REFERENCES public.contacts(id) ON DELETE SET NULL,
  customer_id INT NULL REFERENCES public.contacts(id) ON DELETE SET NULL,
  invoice_type_id INT NULL REFERENCES public.invoice_types(id) ON DELETE SET NULL,
  invoice_no BIGINT NOT NULL DEFAULT 0,
  sales_date timestamp NOT NULL DEFAULT now(),
  sub_total NUMERIC NOT NULL DEFAULT 0,
  total_due NUMERIC NOT NULL DEFAULT 0,
  amount_paid NUMERIC NOT NULL DEFAULT 0,
  change_due NUMERIC NOT NULL DEFAULT 0,
  is_cancelled BOOLEAN NOT NULL DEFAULT FALSE,
  sales_status salesstatus NOT NULL DEFAULT 'in-progress',
  discount_amount NUMERIC NOT NULL DEFAULT 0,
  tax_amount NUMERIC NOT NULL DEFAULT 0,
  payment_method TEXT NOT NULL DEFAULT 'cash'
);

-- 
DROP TABLE IF EXISTS public.selections;
CREATE TABLE IF NOT EXISTS public.selections (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sales_id INT NOT NULL REFERENCES public.sales(id) ON DELETE cascade,
  item_id INT NULL REFERENCES public.items(id) ON DELETE SET NULL,
  price_level_id INT NULL REFERENCES public.price_levels(id) ON DELETE SET NULL,
  quantity INT NOT NULL DEFAULT 1,
  cost NUMERIC NOT NULL DEFAULT 0,
  price NUMERIC NOT NULL DEFAULT 0
);
